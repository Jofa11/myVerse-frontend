[{"/Users/joshuaf/codePractice/my-verse-frontend/src/index.js":"1","/Users/joshuaf/codePractice/my-verse-frontend/src/App.js":"2","/Users/joshuaf/codePractice/my-verse-frontend/src/RandoVerse.js":"3","/Users/joshuaf/codePractice/my-verse-frontend/src/config.js":"4","/Users/joshuaf/codePractice/my-verse-frontend/src/AddVerse.js":"5"},{"size":255,"mtime":1610334035081,"results":"6","hashOfConfig":"7"},{"size":372,"mtime":1610651686382,"results":"8","hashOfConfig":"7"},{"size":858,"mtime":1610749399805,"results":"9","hashOfConfig":"7"},{"size":46,"mtime":1610490348572,"results":"10","hashOfConfig":"7"},{"size":1402,"mtime":1610821855253,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5vuuhc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshuaf/codePractice/my-verse-frontend/src/index.js",[],["24","25"],"/Users/joshuaf/codePractice/my-verse-frontend/src/App.js",[],"/Users/joshuaf/codePractice/my-verse-frontend/src/RandoVerse.js",["26"],"import React, { useState, useEffect } from 'react';\nimport { APIURL } from './config';\n\nfunction RandoVerse(props) {\n\tconst [verse, setVerse] = useState([]);\n\tconst [error, setError] = useState(false);\n\tconst [displayedVerse, setDisplayedVerse] = useState('');\n\n\tuseEffect(() => {\n        const url = `${APIURL}/verses`;\n\t\tfetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n                let randNum = Math.floor(Math.random() * (data.length - 1));\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetVerse(data);\n                setDisplayedVerse(data[randNum]);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetError(true);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{verse.map((verse) => (\n\t\t\t\t\t<li key={verse._id}>\n\t\t\t\t\t\t{verse.body} -{verse.author}\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\n\t\t\t<h3>-{displayedVerse.body}</h3>\n\t\t</div>\n\t);\n}\n\nexport default RandoVerse;\n","/Users/joshuaf/codePractice/my-verse-frontend/src/config.js",[],"/Users/joshuaf/codePractice/my-verse-frontend/src/AddVerse.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":6,"column":9,"nodeType":"33","messageId":"34","endLine":6,"endColumn":14},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]